// <auto-generated />
using System;
using FPLCompanion.DataServices;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPLCompanion.DataServices.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230218114425_gridFilterTable")]
    partial class gridFilterTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPLCompanion.Data.Entities.Element", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("assists")
                        .HasColumnType("int");

                    b.Property<int>("bonus")
                        .HasColumnType("int");

                    b.Property<int>("bps")
                        .HasColumnType("int");

                    b.Property<int?>("chance_of_playing_next_round")
                        .HasColumnType("int");

                    b.Property<int?>("chance_of_playing_this_round")
                        .HasColumnType("int");

                    b.Property<int>("clean_sheets")
                        .HasColumnType("int");

                    b.Property<double>("clean_sheets_per_90")
                        .HasColumnType("float");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<int?>("corners_and_indirect_freekicks_order")
                        .HasColumnType("int");

                    b.Property<string>("corners_and_indirect_freekicks_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cost_change_event")
                        .HasColumnType("int");

                    b.Property<int>("cost_change_event_fall")
                        .HasColumnType("int");

                    b.Property<int>("cost_change_start")
                        .HasColumnType("int");

                    b.Property<int>("cost_change_start_fall")
                        .HasColumnType("int");

                    b.Property<string>("creativity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creativity_rank")
                        .HasColumnType("int");

                    b.Property<int>("creativity_rank_type")
                        .HasColumnType("int");

                    b.Property<int?>("direct_freekicks_order")
                        .HasColumnType("int");

                    b.Property<string>("direct_freekicks_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dreamteam_count")
                        .HasColumnType("int");

                    b.Property<int>("element_type")
                        .HasColumnType("int");

                    b.Property<string>("ep_next")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ep_this")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("event_points")
                        .HasColumnType("int");

                    b.Property<string>("expected_assists")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("expected_assists_per_90")
                        .HasColumnType("float");

                    b.Property<string>("expected_goal_involvements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("expected_goal_involvements_per_90")
                        .HasColumnType("float");

                    b.Property<string>("expected_goals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expected_goals_conceded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("expected_goals_conceded_per_90")
                        .HasColumnType("float");

                    b.Property<double>("expected_goals_per_90")
                        .HasColumnType("float");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("form")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("form_rank")
                        .HasColumnType("int");

                    b.Property<int>("form_rank_type")
                        .HasColumnType("int");

                    b.Property<int>("goals_conceded")
                        .HasColumnType("int");

                    b.Property<double>("goals_conceded_per_90")
                        .HasColumnType("float");

                    b.Property<int>("goals_scored")
                        .HasColumnType("int");

                    b.Property<string>("ict_index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ict_index_rank")
                        .HasColumnType("int");

                    b.Property<int>("ict_index_rank_type")
                        .HasColumnType("int");

                    b.Property<bool>("in_dreamteam")
                        .HasColumnType("bit");

                    b.Property<string>("influence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("influence_rank")
                        .HasColumnType("int");

                    b.Property<int>("influence_rank_type")
                        .HasColumnType("int");

                    b.Property<int>("minutes")
                        .HasColumnType("int");

                    b.Property<string>("news")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("news_added")
                        .HasColumnType("datetime2");

                    b.Property<int>("now_cost")
                        .HasColumnType("int");

                    b.Property<int>("now_cost_rank")
                        .HasColumnType("int");

                    b.Property<int>("now_cost_rank_type")
                        .HasColumnType("int");

                    b.Property<int>("own_goals")
                        .HasColumnType("int");

                    b.Property<int>("penalties_missed")
                        .HasColumnType("int");

                    b.Property<int?>("penalties_order")
                        .HasColumnType("int");

                    b.Property<int>("penalties_saved")
                        .HasColumnType("int");

                    b.Property<string>("penalties_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("points_per_game")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("points_per_game_rank")
                        .HasColumnType("int");

                    b.Property<int>("points_per_game_rank_type")
                        .HasColumnType("int");

                    b.Property<int>("red_cards")
                        .HasColumnType("int");

                    b.Property<int>("saves")
                        .HasColumnType("int");

                    b.Property<double>("saves_per_90")
                        .HasColumnType("float");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("selected_by_percent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("selected_rank")
                        .HasColumnType("int");

                    b.Property<int>("selected_rank_type")
                        .HasColumnType("int");

                    b.Property<bool>("special")
                        .HasColumnType("bit");

                    b.Property<int?>("squad_number")
                        .HasColumnType("int");

                    b.Property<int>("starts")
                        .HasColumnType("int");

                    b.Property<double>("starts_per_90")
                        .HasColumnType("float");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("team")
                        .HasColumnType("int");

                    b.Property<int>("team_code")
                        .HasColumnType("int");

                    b.Property<string>("threat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("threat_rank")
                        .HasColumnType("int");

                    b.Property<int>("threat_rank_type")
                        .HasColumnType("int");

                    b.Property<int>("total_points")
                        .HasColumnType("int");

                    b.Property<int>("transfers_in")
                        .HasColumnType("int");

                    b.Property<int>("transfers_in_event")
                        .HasColumnType("int");

                    b.Property<int>("transfers_out")
                        .HasColumnType("int");

                    b.Property<int>("transfers_out_event")
                        .HasColumnType("int");

                    b.Property<string>("value_form")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value_season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("web_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("yellow_cards")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("element_type");

                    b.HasIndex("team");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.ElementType", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("element_count")
                        .HasColumnType("int");

                    b.Property<string>("plural_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plural_name_short")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("singular_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("singular_name_short")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("squad_max_play")
                        .HasColumnType("int");

                    b.Property<int>("squad_min_play")
                        .HasColumnType("int");

                    b.Property<int>("squad_select")
                        .HasColumnType("int");

                    b.Property<bool>("ui_shirt_specific")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ElementType");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.GridFilter", b =>
                {
                    b.Property<long>("GridFilterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GridFilterId"));

                    b.Property<string>("Filter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GridKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GridFilterId");

                    b.ToTable("GridFilter");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.Team", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<int?>("draw")
                        .HasColumnType("int");

                    b.Property<decimal?>("form")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("loss")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("played")
                        .HasColumnType("int");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.Property<int>("position")
                        .HasColumnType("int");

                    b.Property<int>("pulse_id")
                        .HasColumnType("int");

                    b.Property<string>("short_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("strength")
                        .HasColumnType("int");

                    b.Property<int>("strength_attack_away")
                        .HasColumnType("int");

                    b.Property<int>("strength_attack_home")
                        .HasColumnType("int");

                    b.Property<int>("strength_defence_away")
                        .HasColumnType("int");

                    b.Property<int>("strength_defence_home")
                        .HasColumnType("int");

                    b.Property<int>("strength_overall_away")
                        .HasColumnType("int");

                    b.Property<int>("strength_overall_home")
                        .HasColumnType("int");

                    b.Property<int?>("team_division")
                        .HasColumnType("int");

                    b.Property<bool>("unavailable")
                        .HasColumnType("bit");

                    b.Property<int?>("win")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.Element", b =>
                {
                    b.HasOne("FPLCompanion.Data.Entities.ElementType", "ElementType")
                        .WithMany("Elements")
                        .HasForeignKey("element_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPLCompanion.Data.Entities.Team", "Team")
                        .WithMany("Elements")
                        .HasForeignKey("team")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementType");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.ElementType", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("FPLCompanion.Data.Entities.Team", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
